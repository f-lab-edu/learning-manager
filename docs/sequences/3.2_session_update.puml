@startuml

title 3.2 [P1] Session Update

actor "User (Manager/Admin)" as User
participant "SessionController" as Controller
participant "SessionUpdateService" as AppService
participant "SessionQueryRepository" as QueryRepo
participant "MemberQueryRepository"
participant "CourseQueryRepository"
participant "Session" as SessionDomain
participant "Clock" as Clock
participant "SessionCommandRepository" as CommandRepo

User -> Controller: PUT /api/v1/sessions/{sessionId}
activate Controller

Controller -> AppService: updateSession(sessionId, request)
activate AppService

AppService -> QueryRepo: findById(sessionId)
activate QueryRepo
QueryRepo --> AppService: session
deactivate QueryRepo

note right of AppService
  Permission is validated based on user role
  and session type (standalone, course).
  (e.g., calls MemberQueryRepository, CourseQueryRepository)
end note

AppService -> SessionDomain: reschedule(newScheduledAt, newScheduledEndAt, clock)
activate SessionDomain
SessionDomain -> Clock: instant()
activate Clock
deactivate Clock
deactivate SessionDomain

AppService -> SessionDomain: changeInfo(newTitle, newType, clock)
activate SessionDomain
SessionDomain -> Clock: instant()
activate Clock
deactivate Clock
deactivate SessionDomain

AppService -> SessionDomain: changeLocation(newLocation, newLocationDetails, clock)
activate SessionDomain
SessionDomain -> Clock: instant()
activate Clock
deactivate Clock
deactivate SessionDomain

AppService -> CommandRepo: save(session)
activate CommandRepo
deactivate CommandRepo

AppService --> Controller: void
deactivate AppService

Controller --> User: 204 No Content
deactivate Controller

@enduml
