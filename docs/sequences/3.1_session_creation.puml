@startuml

title 3.1 [P0] Session Creation

actor "User (Manager/Admin)" as User
participant "SessionController" as Controller
participant "SessionCreationService" as AppService
participant "MemberQueryRepository" as MemberQueryRepo
participant "CourseQueryRepository" as CourseQueryRepo
participant "Session" as SessionDomain
participant "SessionCommandRepository" as CommandRepo
participant "Clock" as Clock

User -> Controller: POST /api/v1/sessions
activate Controller

Controller -> AppService: createSession(request)
activate AppService

AppService -> MemberQueryRepo: findById(userId)
note left: userId from AuthenticationContextHolder
activate MemberQueryRepo
deactivate MemberQueryRepo

note right of AppService
  Permission is validated based on user role
  and request type (standalone, course, curriculum).
  (e.g., calls CourseQueryRepo.findManagedCourseById)
end note

alt createCommand is for Standalone Session
    AppService -> SessionDomain: createStandaloneSession(...)
else createCommand is for Course Session
    AppService -> SessionDomain: createCourseSession(...)
else createCommand is for Curriculum Session
    AppService -> SessionDomain: createCurriculumSession(...)
else createCommand is for Child Session
    AppService -> SessionDomain: createChildSession(...)
end
activate SessionDomain

SessionDomain -> Clock: instant()
activate Clock
deactivate Clock

deactivate SessionDomain

AppService -> CommandRepo: create(newSession)
activate CommandRepo
CommandRepo --> AppService: savedSession
deactivate CommandRepo

AppService --> Controller: SessionCreation.Response
deactivate AppService

Controller --> User: 201 Created
deactivate Controller

@enduml
