@startuml

title 3.3 [P2] Session Participant Management - Add Participant

actor "User (Manager/Host)" as User
participant "SessionParticipantController" as Controller
participant "SessionParticipantService" as AppService
participant "SessionQueryRepository" as SessionQueryRepo
participant "CourseQueryRepository" as CourseQueryRepo
participant "Session" as SessionDomain
participant "SessionCommandRepository" as SessionCommandRepo

User -> Controller: POST /api/v1/sessions/{sessionId}/participants
activate Controller

Controller -> AppService: addParticipant(sessionId, request)
activate AppService

AppService -> SessionQueryRepo: findById(sessionId)
activate SessionQueryRepo
SessionQueryRepo --> AppService: session
deactivate SessionQueryRepo

note right of AppService
  Permission is validated:
  - Is user a Course Manager? (calls CourseQueryRepo)
  - Or is user a Session HOST?
end note

AppService -> CourseQueryRepo: findManagedCourseById()

AppService -> SessionDomain: addParticipant(memberId, role)
activate SessionDomain
deactivate SessionDomain

AppService -> SessionCommandRepo: save(session)
activate SessionCommandRepo
deactivate SessionCommandRepo

AppService --> Controller: SessionParticipantResponse
deactivate AppService

Controller --> User: 201 Created
deactivate Controller

@enduml
