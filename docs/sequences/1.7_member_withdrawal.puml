@startuml

title 1.7 [P2] Member Withdrawal : 회원 탈퇴

actor "User (Member)" as User
participant "JwtAuthenticationFilter" as Filter
participant "MemberProfileController" as Controller
participant "MemberWithdrawalService" as AppService
participant "CourseQueryRepository" as CourseQueryRepo
participant "MemberQueryRepository" as MemberQueryRepo
participant "Member" as MemberDomain
participant "Account" as AccountDomain
participant "MemberCommandRepository" as MemberCommandRepo

User -> Controller: DELETE /api/v1/members/withdrawal
note left: with Authorization header
activate Controller

Controller -> AppService: withdrawal()
note left: memberId is from AuthenticationContextHolder
activate AppService

AppService -> CourseQueryRepo: findManagedCoursesByMemberId(memberId)
activate CourseQueryRepo
alt Has Managed Courses
    CourseQueryRepo --> AppService: List<Course> (not empty)
    deactivate CourseQueryRepo
    AppService --> Controller: IllegalStateException
    deactivate AppService
    Controller --> User: 400 Bad Request
    deactivate Controller
else No Managed Courses
    CourseQueryRepo --> AppService: emptyList()
    deactivate CourseQueryRepo

    AppService -> MemberQueryRepo: findById(memberId)
    activate MemberQueryRepo
    MemberQueryRepo --> AppService: member
    deactivate MemberQueryRepo

    AppService -> MemberDomain: withdraw()
    activate MemberDomain
    deactivate MemberDomain

    loop for each account in member
        AppService -> MemberDomain: deactivateAccount(accountId)
        activate MemberDomain
        MemberDomain -> AccountDomain: deactivate()
        deactivate MemberDomain
    end

    AppService -> MemberCommandRepo: save(member)
    activate MemberCommandRepo
    deactivate MemberCommandRepo

    AppService --> Controller: void
    deactivate AppService

    Controller --> User: 204 No Content
    deactivate Controller
end

@enduml
