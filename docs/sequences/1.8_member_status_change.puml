@startuml

title 1.8 [P2] Member Status Change by Admin

actor "User (Admin)" as User
participant "JwtAuthenticationFilter" as Filter
participant "MemberAdminController" as Controller
participant "MemberStatusChangeService" as AppService
participant "MemberQueryRepository" as QueryRepo
participant "Member" as MemberDomain
participant "MemberCommandRepository" as CommandRepo

User -> Controller: PUT /api/v1/admin/members/{memberId}/status
note left: with Authorization header
activate Controller

Controller -> AppService: changeStatus(request)
activate AppService

AppService -> QueryRepo: findById(adminId)
note left: adminId from AuthenticationContextHolder
activate QueryRepo
QueryRepo --> AppService: adminMember
deactivate QueryRepo

note right of AppService: Verify user is ADMIN

AppService -> QueryRepo: findById(targetMemberId)
activate QueryRepo
QueryRepo --> AppService: targetMember
deactivate QueryRepo

alt newStatus
    case ACTIVE
        AppService -> MemberDomain: activate()
    case INACTIVE
        AppService -> MemberDomain: deactivate()
    case BANNED
        AppService -> MemberDomain: ban()
    case WITHDRAWN
        AppService -> MemberDomain: withdraw()
end
activate MemberDomain
deactivate MemberDomain

AppService -> CommandRepo: save(targetMember)
activate CommandRepo
deactivate CommandRepo

AppService --> Controller: void
deactivate AppService

Controller --> User: 204 No Content
deactivate Controller

@enduml
