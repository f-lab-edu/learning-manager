@startuml

title 1.1 [P0] Member Registration - (2) 인증 이메일을 통한 회원 활성화

actor "User (Guest)" as User
participant "MemberRegisterController" as Controller
participant "MemberRegisterService" as AppService
participant "SignUpConfirmer" as Confirmer
participant "MemberQueryRepository" as QueryRepo
participant "Member" as MemberDomain
participant "Account" as AccountDomain
participant "MemberCommandRepository" as CommandRepo

User -> Controller: GET /api/v1/members/activate?token=...
activate Controller

Controller -> AppService: activateSignUpMember(request)
activate AppService

AppService -> Confirmer: validateToken(token)
activate Confirmer
alt Invalid or Expired Token
    Confirmer --> AppService: false
    deactivate Confirmer
    AppService --> Controller: DomainException (EXPIRED_ACTIVATION_TOKEN)
    deactivate AppService
    Controller --> User: 400 Bad Request
    deactivate Controller
else Valid Token
    Confirmer --> AppService: true
    deactivate Confirmer

    AppService -> Confirmer: getMemberIdByToken(token)
    activate Confirmer
    Confirmer --> AppService: memberId
    deactivate Confirmer

    AppService -> QueryRepo: findById(memberId)
    activate QueryRepo
    QueryRepo --> AppService: member (PENDING)
    deactivate QueryRepo

    AppService -> MemberDomain: activate()
    activate MemberDomain
    deactivate MemberDomain

    AppService -> MemberDomain: activateAccount(accountId)
    activate MemberDomain
    MemberDomain -> AccountDomain: activate()
    deactivate MemberDomain

    AppService -> CommandRepo: save(member)
    activate CommandRepo
    CommandRepo --> AppService
    deactivate CommandRepo

    AppService -> Confirmer: removeToken(token)
    activate Confirmer
    deactivate Confirmer

    AppService --> Controller: void
    deactivate AppService

    Controller --> User: 200 OK
    deactivate Controller
end

@enduml
